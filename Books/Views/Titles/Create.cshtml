@model Books.Models.Title

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@* Form for Create New Title *@
<div class="form-horizontal">
    <h4>Title</h4>
    <hr />
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.title_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title_id, new { htmlAttributes = new { @maxlength = "25", @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @maxlength = "80", @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.type, new { htmlAttributes = new { @maxlength = "12", @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pub_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pub_id, new { htmlAttributes = new { @maxlength = "4", @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.advance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.advance, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.royalty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.royalty, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ytd_sales, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ytd_sales, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @maxlength = "200", @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pubdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pubdate, new { htmlAttributes = new { @class = "form-control datepicker" } })
        </div>
    </div>

    @* Div Container for Validation Messages *@
    <div class="text-danger" id="ValidationMessage">
    </div>
    <br />
    <br />

    @* Spinner Image and Div for Web App Busy Working *@
    <div id="modal" class="modal" style="display:none;padding-top:400px;">
        <div class="text-center">
            <img alt="" src="~/Content/Images/loader4.gif" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button id="CreateBTN" value="Create" class="btn btn-primary">Create</button>
        </div>
    </div>

</div>

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@* JQuery UI CSS Styles *@
@Styles.Render("~/Content/cssjqryUi")

@* JQuery Code for Form Validation and also AJAX HTTP POST *@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">
        $(document).ready(function () {

            // datepicker for Publish Date
            $('.datepicker').datepicker({
            });

            // process create button click
            $("#CreateBTN").click(function () {

                var formValidated = true;
                var validationMessage = "Error: ";

                // Title ID
                var title_id = "";
                if ($("#title_id").val().trim() != "") {
                    title_id = $("#title_id").val().trim();
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Title ID Required<br>";
                }

                // Title
                var title = "";
                if ($("#title").val().trim() != "") {
                    title = $("#title").val().trim();
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Title Required<br>";
                }

                // Type
                var type = "";
                if ($("#type").val().trim() != "") {
                    type = $("#type").val().trim();
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Type Required<br>";
                }

                // Publisher ID
                var pub_id = "";
                if ($("#pub_id").val().trim() != "") {
                    pub_id = $("#pub_id").val().trim();
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Publisher ID Required<br>";
                }

                // Price
                var price = "";
                if ($("#price").val().trim() != "") {
                    if (/^\d{0,6}(\.\d{0,2})?$/.test($("#price").val())) {
                        price = $("#price").val();
                    }
                    else
                    {
                        formValidated = false;
                        validationMessage = validationMessage + "Price not a valid money number<br>";
                    }
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Price Required<br>";
                }

                // Advance
                var advance = "";
                if ($("#advance").val().trim() != "") {
                    if (/^\d{0,6}(\.\d{0,2})?$/.test($("#advance").val())) {
                        advance = $("#advance").val();
                    }
                    else {
                        formValidated = false;
                        validationMessage = validationMessage + "Advance not a valid money number<br>";
                    }
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Advance Required<br>";
                }

                // Royalty
                var royalty = "";
                if ($("#royalty").val().trim() != "") {
                    if (/^\d{0,6}?$/.test($("#royalty").val())) {
                        royalty = $("#royalty").val();
                    }
                    else {
                        formValidated = false;
                        validationMessage = validationMessage + "Royalty not a valid money number, whole dollars only, no cents<br>";
                    }
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Royalty Required<br>";
                }

                // YTD Sales
                var ytd_sales = "";
                if ($("#ytd_sales").val().trim() != "") {
                    if (/^\d{0,6}?$/.test($("#ytd_sales").val())) {
                        ytd_sales = $("#ytd_sales").val();
                    }
                    else {
                        formValidated = false;
                        validationMessage = validationMessage + "YTD Sales not a valid money number, whole dollars only, no cents<br>";
                    }
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "YTD Sales Required<br>";
                }

                // Notes
                var notes = "";
                if ($("#notes").val().trim() != "") {
                    notes = $("#notes").val().trim();
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Notes Required<br>";
                }

                // Publish Date
                var pubdate = "";
                if ($("#pubdate").val().trim() != "") {
                    pubdate = $("#pubdate").val().trim();
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Publish Date Required<br>";
                }

                var __RequestVerificationToken = $("input[name=__RequestVerificationToken]").val();

                if (formValidated === true) {

                    // POST to Create Title
                    $.post("/Titles/Create",
                        {
                            __RequestVerificationToken: __RequestVerificationToken,
                            title_id: title_id,
                            title: title,
                            type: type,
                            pub_id: pub_id,
                            price: price,
                            advance: advance,
                            royalty: royalty,
                            ytd_sales: ytd_sales,
                            notes: notes,
                            pubdate: pubdate
                        },
                        function (data, status) {
                            // alert("Data: " + data + "\nStatus: " + status);
                        });

                    // show spinner for busy
                    $("#modal").show();

                    // wait 4 seconds for the database insert to complete before redirecting
                    window.setTimeout(function () { location.href = "/Titles"; }, 4000);

                }
                else {
                    $("#ValidationMessage").html(validationMessage);
                }

            });
        });
    </script>

}
