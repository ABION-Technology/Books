@model Books.Models.Sale

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div class="form-horizontal">
    <h4>Sale</h4>
    <hr />
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.stor_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.stor_id, new { htmlAttributes = new { @maxlength="4", @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ord_num, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ord_num, new { htmlAttributes = new { @maxlength="20", @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ord_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ord_date, new { htmlAttributes = new { @class = "form-control datepicker" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.qty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.qty, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    @* Div Container for Validation Messages *@
    <div class="text-danger" id="ValidationMessage">
    </div>
    <br />
    <br />

    @* Spinner Image and Div for Web App Busy Working *@
    <div id="modal" class="modal" style="display:none;padding-top:400px;">
        <div class="text-center">
            <img alt="" src="~/Content/Images/loader4.gif" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button id="CreateBTN" value="Create" class="btn btn-primary">Create</button>
        </div>
    </div>

</div>

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
</div>

@* JQuery UI CSS Styles *@
@Styles.Render("~/Content/cssjqryUi")

@* JQuery Code for Form Validation and also AJAX HTTP POST *@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")

<script type="text/javascript">
    $(document).ready(function () {

        // datepicker for Publish Date
        $('.datepicker').datepicker({
        });

        // process create button click
        $("#CreateBTN").click(function () {

            var formValidated = true;
            var validationMessage = "Error: ";

            // Store ID
            var stor_id = "";
            if ($("#stor_id").val().trim() != "") {
                stor_id = $("#stor_id").val().trim();
                if (stor_id.length > 4) {
                    stor_id = stor_id.substring(0, 4);
                }
            }
            else {
                formValidated = false;
                validationMessage = validationMessage + "Store ID Required<br>";
            }

            // Order Number
            var ord_num = "";
            if ($("#ord_num").val().trim() != "") {
                ord_num = $("#ord_num").val().trim();
            }
            else {
                formValidated = false;
                validationMessage = validationMessage + "Order Number Required<br>";
            }

            // Order Date
            var ord_date = "";
            if ($("#ord_date").val().trim() != "") {
                ord_date = $("#ord_date").val().trim();
            }
            else {
                formValidated = false;
                validationMessage = validationMessage + "Order Date Required<br>";
            }

            // Order Quantity
            var qty = "";
            if ($("#qty").val().trim() != "") {
                if (/^\d{0,6}?$/.test($("#qty").val())) {
                    qty = $("#qty").val();
                }
                else {
                    formValidated = false;
                    validationMessage = validationMessage + "Order Quantity not a whole, non-decimal number<br>";
                }
            }
            else {
                formValidated = false;
                validationMessage = validationMessage + "Order Quantity Required<br>";
            }

            var __RequestVerificationToken = $("input[name=__RequestVerificationToken]").val();

            if (formValidated === true) {

                // POST to Create Sales
                $.post("/Sales/Create",
                    {
                        __RequestVerificationToken: __RequestVerificationToken,
                        stor_id: stor_id,
                        ord_num: ord_num,
                        ord_date: ord_date,
                        qty: qty
                    },
                    function (data, status) {
                        // alert("Data: " + data + "\nStatus: " + status);
                    });

                // show spinner for busy
                $("#modal").show();

                // wait 4 seconds for the database insert to complete before redirecting
                window.setTimeout(function () { location.href = "/Sales"; }, 4000);

            }
            else {
                $("#ValidationMessage").html(validationMessage);
            }

        });
    });
</script>

}
